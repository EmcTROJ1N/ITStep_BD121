1. Пользователь вводит имя папки, программа удаляет из неё все текстовые файлы

2. Пользователь вводит адрес исходной папки и адрес результирующей папки. Программа копирует все картинки из исходной папки и подпапок в результирующую папку.
Имена скопированных файлов пишутся в файл логов

3. Пользователь вводит путь к исходной папке и имя (маску) файла. Программа ищет все файлы по маске, начиная с исходной папки. Результаты поиска пишутся на странице.

4. Пользователь загружает на сервер текстовый файл. Программа разбивает файл на слова и выводит их на следующей странице без повторений.
Вычистить неправильные слова (не из букв и цифр, разрешены: .,!?-)



5. Пользователь загружает на сервер текстовый файл. Программа подсчитывает сумму чисел в текстовом файле. Отрицательные числа тоже учитывать.

6. Пользователь загружает на сервер текстовый файл. Программа вычисляет примеры вида [a+b, a-b, a*b, a/b] и результаты подстваляет в текст вместо примеров.
Результирующий текст выводится на следующую страницу.

Пример текста:
У бабушки было 34-21 лосей. Потом она нашла ещё 2+3 яблока. Когда следующий автобус к бабушке?

Результат:
У бабушки было 13 лосей. Потом она нашла ещё 5 яблока. Когда следующий автобус к бабушке?

7. Создать сайт-фотогалерею для просмотра картинок. Пользователь должен зарегистрироваться на сайте для загрузки и просмотра своих картинок. Для регистрации нужно пройти
captcha. После регистрации нужно сделать вход на сайт. Учётные записи пользователей хранятся в файле.

8. Реализовать фотогалерею при помощи классов и за основу взять сайт из предыдущего ДЗ.

8a. Разработать на PHP программу, которая повторяет функционал программы с фигурами и полиморфизмом, из программы на C# CS_Polymorphism

9. В фотогалерею добавить возможность входа админа, который видит папки с картинками различных пользователей и может удалять сами картинки, пользователей и их папки с
картинками, а также перемещаться по альбомам других пользователей и просматривать их картинки.

10. В фотогалерее использовать различные возможности ООП
- генераторы
- итераторы
- ArrayAccess
- __set, __get
- сериализация

11. SQL
- показать авторов самой дорогой книги
- увеличить цену самой дешёвой книги на 30%
- хранимая процедура принимает название штата и сумму денег. Она увеличивает стоимость книг авторов указанного штата на указанную сумму денег
- хранимая процедура принимает параметры и позволяет добавить автора, если автора с такими именем и фамилией не существует
- хранимая процедура удаляет авторов, которые не пишут книги

12. SQL
- показать магазины, которые продают книги более одного жанра
- показать название штата, авторы из которого написали больше всего книг
- хранимая процедура принимает название штата и выдаёт список книг авторов из этого штата
- хранимая функция принимает название штата и возращает максимальную стоимость книги авторов из этого штата
- хранимая процедура принимает название жанра и возвращает количество книг в этом жанре и среднюю стоимость книги в этом жанре

12a. Разработать сайт, который позволяет делать CRUD для любой таблицы БД pubs

13. Пользователь задаёт путь к папке. Программа сканирует папки и подпапки и помещает информацию обо всех найденных файлах и папках и типах файлов в БД на SQLite
После этого программа формирует отчёт о найденных файлах и папках и показывает на странице:
- количество найденных файлов / папок
- количество файлов разных типов
- файлы и размеры файлов
- статитстика длины, имён файлов

14. При помощи PDO на БД pubs реализовать следующие запросы к БД
- CRUD для любой таблицы БД pubs
- показать авторов самой дорогой книги
- показать магазины, которые продают книги более одного жанра
- показать название штата, авторы из которого написали больше всего книг
- Для каждого штата показать количество книг, написанных авторами из этого штата, максимальную и минимальную цены книг и количество авторов
- Для каждого магазина показать количество авторов, продающих в нём книги, количество книг, среднюю цену книги