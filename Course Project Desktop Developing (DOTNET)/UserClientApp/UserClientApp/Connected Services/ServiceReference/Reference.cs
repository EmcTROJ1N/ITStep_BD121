//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserClientApp.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ResourcesNetworkStatus ClientStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConnectorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ResourcesNetworkStatus _clientStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ResourcesNetworkStatus ClientStatus {
            get {
                return this.ClientStatusField;
            }
            set {
                if ((this.ClientStatusField.Equals(value) != true)) {
                    this.ClientStatusField = value;
                    this.RaisePropertyChanged("ClientStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConnectorID {
            get {
                return this.ConnectorIDField;
            }
            set {
                if ((this.ConnectorIDField.Equals(value) != true)) {
                    this.ConnectorIDField = value;
                    this.RaisePropertyChanged("ConnectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ResourcesNetworkStatus _clientStatus {
            get {
                return this._clientStatusField;
            }
            set {
                if ((this._clientStatusField.Equals(value) != true)) {
                    this._clientStatusField = value;
                    this.RaisePropertyChanged("_clientStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resources.NetworkStatus", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    public enum ResourcesNetworkStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Administrator", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    [System.SerializableAttribute()]
    public partial class Administrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ResourcesNetworkStatus ClientStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConnectorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ResourcesSearchingStatus FindStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ResourcesNetworkStatus _clientStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _connectorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ResourcesNetworkStatus ClientStatus {
            get {
                return this.ClientStatusField;
            }
            set {
                if ((this.ClientStatusField.Equals(value) != true)) {
                    this.ClientStatusField = value;
                    this.RaisePropertyChanged("ClientStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConnectorID {
            get {
                return this.ConnectorIDField;
            }
            set {
                if ((this.ConnectorIDField.Equals(value) != true)) {
                    this.ConnectorIDField = value;
                    this.RaisePropertyChanged("ConnectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ResourcesSearchingStatus FindStatus {
            get {
                return this.FindStatusField;
            }
            set {
                if ((this.FindStatusField.Equals(value) != true)) {
                    this.FindStatusField = value;
                    this.RaisePropertyChanged("FindStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ResourcesNetworkStatus _clientStatus {
            get {
                return this._clientStatusField;
            }
            set {
                if ((this._clientStatusField.Equals(value) != true)) {
                    this._clientStatusField = value;
                    this.RaisePropertyChanged("_clientStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _connectorID {
            get {
                return this._connectorIDField;
            }
            set {
                if ((this._connectorIDField.Equals(value) != true)) {
                    this._connectorIDField = value;
                    this.RaisePropertyChanged("_connectorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resources.SearchingStatus", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    public enum ResourcesSearchingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForStart = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Searching = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileContainer", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    [System.SerializableAttribute()]
    public partial class FileContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastAccessTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastWriteTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastAccessTime {
            get {
                return this.LastAccessTimeField;
            }
            set {
                if ((this.LastAccessTimeField.Equals(value) != true)) {
                    this.LastAccessTimeField = value;
                    this.RaisePropertyChanged("LastAccessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastWriteTime {
            get {
                return this.LastWriteTimeField;
            }
            set {
                if ((this.LastWriteTimeField.Equals(value) != true)) {
                    this.LastWriteTimeField = value;
                    this.RaisePropertyChanged("LastWriteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessContainer", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    [System.SerializableAttribute()]
    public partial class ProcessContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BasePriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RespondingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long _PagedMemoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BasePriority {
            get {
                return this.BasePriorityField;
            }
            set {
                if ((this.BasePriorityField.Equals(value) != true)) {
                    this.BasePriorityField = value;
                    this.RaisePropertyChanged("BasePriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Responding {
            get {
                return this.RespondingField;
            }
            set {
                if ((this.RespondingField.Equals(value) != true)) {
                    this.RespondingField = value;
                    this.RaisePropertyChanged("Responding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowTitle {
            get {
                return this.WindowTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowTitleField, value) != true)) {
                    this.WindowTitleField = value;
                    this.RaisePropertyChanged("WindowTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _PagedMemory {
            get {
                return this._PagedMemoryField;
            }
            set {
                if ((this._PagedMemoryField.Equals(value) != true)) {
                    this._PagedMemoryField = value;
                    this.RaisePropertyChanged("_PagedMemory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderContainer", Namespace="http://schemas.datacontract.org/2004/07/ServerService")]
    [System.SerializableAttribute()]
    public partial class FolderContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.FileContainer[] FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.FileContainer[] Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistryKeyContainer", Namespace="http://schemas.datacontract.org/2004/07/ServerService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RegistryKeyContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SubKeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.ValueContainer[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SubKeys {
            get {
                return this.SubKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.SubKeysField, value) != true)) {
                    this.SubKeysField = value;
                    this.RaisePropertyChanged("SubKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.ValueContainer[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueContainer", Namespace="http://schemas.datacontract.org/2004/07/ServerService", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.ResourcesNetworkStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.Administrator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.ResourcesSearchingStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.FileContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.ProcessContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.ProcessContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.FolderContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.FolderContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.FileContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.RegistryKeyContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.RegistryKeyContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UserClientApp.ServiceReference.ValueContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Win32.RegistryValueKind))]
    public partial class ValueContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientApp.ServiceReference.RegistryKeyContainer ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Win32.RegistryValueKind TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientApp.ServiceReference.RegistryKeyContainer Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Win32.RegistryValueKind Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUserService", CallbackContract=typeof(UserClientApp.ServiceReference.IUserServiceCallback))]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegistrateUser", ReplyAction="http://tempuri.org/IUserService/RegistrateUserResponse")]
        UserClientApp.ServiceReference.User RegistrateUser(string login, int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RegistrateUser", ReplyAction="http://tempuri.org/IUserService/RegistrateUserResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> RegistrateUserAsync(string login, int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LogInUser", ReplyAction="http://tempuri.org/IUserService/LogInUserResponse")]
        UserClientApp.ServiceReference.User LogInUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LogInUser", ReplyAction="http://tempuri.org/IUserService/LogInUserResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> LogInUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LogOutUser", ReplyAction="http://tempuri.org/IUserService/LogOutUserResponse")]
        void LogOutUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LogOutUser", ReplyAction="http://tempuri.org/IUserService/LogOutUserResponse")]
        System.Threading.Tasks.Task LogOutUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        void RemoveUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorById", ReplyAction="http://tempuri.org/IUserService/GetAdministratorByIdResponse")]
        UserClientApp.ServiceReference.Administrator GetAdministratorById(int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorById", ReplyAction="http://tempuri.org/IUserService/GetAdministratorByIdResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.Administrator> GetAdministratorByIdAsync(int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorByLog", ReplyAction="http://tempuri.org/IUserService/GetAdministratorByLogResponse")]
        UserClientApp.ServiceReference.Administrator GetAdministratorByLog(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAdministratorByLog", ReplyAction="http://tempuri.org/IUserService/GetAdministratorByLogResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.Administrator> GetAdministratorByLogAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        UserClientApp.ServiceReference.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendFile", ReplyAction="http://tempuri.org/IUserService/SendFileResponse")]
        void SendFile(UserClientApp.ServiceReference.FileContainer fileContainer, int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendFile", ReplyAction="http://tempuri.org/IUserService/SendFileResponse")]
        System.Threading.Tasks.Task SendFileAsync(UserClientApp.ServiceReference.FileContainer fileContainer, int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSearchingStatus", ReplyAction="http://tempuri.org/IUserService/GetSearchingStatusResponse")]
        UserClientApp.ServiceReference.ResourcesSearchingStatus GetSearchingStatus(int connectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSearchingStatus", ReplyAction="http://tempuri.org/IUserService/GetSearchingStatusResponse")]
        System.Threading.Tasks.Task<UserClientApp.ServiceReference.ResourcesSearchingStatus> GetSearchingStatusAsync(int connectorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendMessageBoxCallback", ReplyAction="http://tempuri.org/IUserService/SendMessageBoxCallbackResponse")]
        void SendMessageBoxCallback(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProcessesCallback", ReplyAction="http://tempuri.org/IUserService/GetProcessesCallbackResponse")]
        UserClientApp.ServiceReference.ProcessContainer[] GetProcessesCallback(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/TerminateProcessesCallback", ReplyAction="http://tempuri.org/IUserService/TerminateProcessesCallbackResponse")]
        void TerminateProcessesCallback(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SuspendProcessesCallback", ReplyAction="http://tempuri.org/IUserService/SuspendProcessesCallbackResponse")]
        void SuspendProcessesCallback(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResumeProcessesCallback", ReplyAction="http://tempuri.org/IUserService/ResumeProcessesCallbackResponse")]
        void ResumeProcessesCallback(int[] pids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/BeginFindFiles", ReplyAction="http://tempuri.org/IUserService/BeginFindFilesResponse")]
        void BeginFindFiles(string path, string mask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/StartProcessCallback", ReplyAction="http://tempuri.org/IUserService/StartProcessCallbackResponse")]
        void StartProcessCallback(string path, string args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetLogicalDrivesCallback", ReplyAction="http://tempuri.org/IUserService/GetLogicalDrivesCallbackResponse")]
        string[] GetLogicalDrivesCallback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFoldersCallback", ReplyAction="http://tempuri.org/IUserService/GetFoldersCallbackResponse")]
        UserClientApp.ServiceReference.FolderContainer[] GetFoldersCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetFilesCallback", ReplyAction="http://tempuri.org/IUserService/GetFilesCallbackResponse")]
        UserClientApp.ServiceReference.FileContainer[] GetFilesCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteObjectCallback", ReplyAction="http://tempuri.org/IUserService/DeleteObjectCallbackResponse")]
        void DeleteObjectCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RenameObjectCallback", ReplyAction="http://tempuri.org/IUserService/RenameObjectCallbackResponse")]
        void RenameObjectCallback(string path, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CopyObjectCallback", ReplyAction="http://tempuri.org/IUserService/CopyObjectCallbackResponse")]
        void CopyObjectCallback(string fromPath, string toPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LockStationCallback", ReplyAction="http://tempuri.org/IUserService/LockStationCallbackResponse")]
        void LockStationCallback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SuspendStationCallback", ReplyAction="http://tempuri.org/IUserService/SuspendStationCallbackResponse")]
        void SuspendStationCallback(bool toHibernate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRegistryKeysCallback", ReplyAction="http://tempuri.org/IUserService/GetRegistryKeysCallbackResponse")]
        UserClientApp.ServiceReference.RegistryKeyContainer[] GetRegistryKeysCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRegistryKeyValuesCallback", ReplyAction="http://tempuri.org/IUserService/GetRegistryKeyValuesCallbackResponse")]
        UserClientApp.ServiceReference.ValueContainer[] GetRegistryKeyValuesCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RenameRegistryKeyValueCallback", ReplyAction="http://tempuri.org/IUserService/RenameRegistryKeyValueCallbackResponse")]
        void RenameRegistryKeyValueCallback(string path, string name, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RenameRegistryKeyCallback", ReplyAction="http://tempuri.org/IUserService/RenameRegistryKeyCallbackResponse")]
        void RenameRegistryKeyCallback(string path, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteRegistryKeyValueCallback", ReplyAction="http://tempuri.org/IUserService/DeleteRegistryKeyValueCallbackResponse")]
        void DeleteRegistryKeyValueCallback(string path, string valueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteRegistryKeyCallback", ReplyAction="http://tempuri.org/IUserService/DeleteRegistryKeyCallbackResponse")]
        void DeleteRegistryKeyCallback(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SendCommandCallback", ReplyAction="http://tempuri.org/IUserService/SendCommandCallbackResponse")]
        string[] SendCommandCallback(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetScreenshotCallback", ReplyAction="http://tempuri.org/IUserService/GetScreenshotCallbackResponse")]
        byte[] GetScreenshotCallback();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : UserClientApp.ServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.DuplexClientBase<UserClientApp.ServiceReference.IUserService>, UserClientApp.ServiceReference.IUserService {
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public UserClientApp.ServiceReference.User RegistrateUser(string login, int connectorId) {
            return base.Channel.RegistrateUser(login, connectorId);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> RegistrateUserAsync(string login, int connectorId) {
            return base.Channel.RegistrateUserAsync(login, connectorId);
        }
        
        public UserClientApp.ServiceReference.User LogInUser(string login) {
            return base.Channel.LogInUser(login);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> LogInUserAsync(string login) {
            return base.Channel.LogInUserAsync(login);
        }
        
        public void LogOutUser(string login) {
            base.Channel.LogOutUser(login);
        }
        
        public System.Threading.Tasks.Task LogOutUserAsync(string login) {
            return base.Channel.LogOutUserAsync(login);
        }
        
        public void RemoveUser(string login) {
            base.Channel.RemoveUser(login);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(string login) {
            return base.Channel.RemoveUserAsync(login);
        }
        
        public UserClientApp.ServiceReference.Administrator GetAdministratorById(int connectorId) {
            return base.Channel.GetAdministratorById(connectorId);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.Administrator> GetAdministratorByIdAsync(int connectorId) {
            return base.Channel.GetAdministratorByIdAsync(connectorId);
        }
        
        public UserClientApp.ServiceReference.Administrator GetAdministratorByLog(string login) {
            return base.Channel.GetAdministratorByLog(login);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.Administrator> GetAdministratorByLogAsync(string login) {
            return base.Channel.GetAdministratorByLogAsync(login);
        }
        
        public UserClientApp.ServiceReference.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public void SendFile(UserClientApp.ServiceReference.FileContainer fileContainer, int connectorId) {
            base.Channel.SendFile(fileContainer, connectorId);
        }
        
        public System.Threading.Tasks.Task SendFileAsync(UserClientApp.ServiceReference.FileContainer fileContainer, int connectorId) {
            return base.Channel.SendFileAsync(fileContainer, connectorId);
        }
        
        public UserClientApp.ServiceReference.ResourcesSearchingStatus GetSearchingStatus(int connectorId) {
            return base.Channel.GetSearchingStatus(connectorId);
        }
        
        public System.Threading.Tasks.Task<UserClientApp.ServiceReference.ResourcesSearchingStatus> GetSearchingStatusAsync(int connectorId) {
            return base.Channel.GetSearchingStatusAsync(connectorId);
        }
    }
}
