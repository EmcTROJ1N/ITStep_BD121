React

1. Разработать React-компонент, который позволяет вводить информацию о человеке в форме (ФИО, телефон, адрес, ЗП). Добавить
валидацию полей. При добавлении человека запись о нём отображается с другими записями в отдельном компоненте, который представляет
собой таблицу. Можно выделить запись в таблице и удалить запись. (Редактировать по желанию). Реализовать при помощи функций.

2. Разработать React-компонент, представляющий собой мячик, отскакивающий от стен в окне браузера. Для мячика можно задавать скорость,
цвет, размеры. Реализовать в виде нескольких компонентов, при помощи функций.

3. Разработать React-компонент, принимающий адрес папки с картинками и показывающий картинки в галерее. Реализовать при помощи
функций. Параметры компонента: адрес папки, размеры окна с картинками, опции.

4. Разработать React-компонент, который позволяет вводить информацию о человеке в форме (ФИО, телефон, адрес, ЗП). Добавить
валидацию полей. При добавлении человека запись о нём отображается с другими записями в отдельном компоненте, который представляет
собой таблицу. Можно выделить запись в таблице и удалить запись. (Редактировать по желанию). Реализовать при помощи функций.
Добавить меню. Разместить все компоненты на разных страницах и сделать доступ по разным маршрутам и по разным пунктам меню.
Можно добавить к людям ещё одну сущность - автомобили.
например:

Просмотреть		Добавить	Редактировать  

Для построения пользовательского интерфейса использовать MUI

5. Реализовать задачу, в которой пользователи могут решать стандартную задачу CRUD для авторов из pubs при помощи связки ASP.NET WEB API + React
Использовать:
- React routing
- fetch (GET, POST, PUT, DELETE)
- API controllers для выдачи инфо об авторах и CRUD
- MUI