1. Задача на 7 баллов

Разработать класс-коллекцию, который позволяет хранить список интервалов.
Любой интервал имеет начало и конец, которые заданы 2 числами типа double.
Интервал представляет собой отдельный класс. Класс коллекции имеет следующие методы:

- конструктор по умолчанию
- конструктор, принимающий один интервал
- конструктор копирования
- Add(Interval interval) – добавление интервала в коллекцию интервалов
- RemoveByPos(int pos) - удаление интервала по позиции
- RemoveByValue(double value) - удаление всех интервалов, с началом меньшим, чем значение
- RemoveByLength(double length) - удаление всех интервалов, с длиной, меньше заданной
- свойство для чтения Count - количество интервалов
- GetLongest() - получить самый длинный интервал в коллекции
- GetShortest() - получить самый короткий интервал
- operator + , operator += - добавление интервала в коллекцию интервалов
- operator[] (индексатор) - получить интервал по номеру
- operator ==, != - сравнение коллекций интервалов
- свойство для чтения bool HasHoles сообщает, содержит ли коллекция интервалов "дыры" внутри, то есть, все ли интервалы перекрывают друг друга
- свойства для чтения Start, End координаты начала первого и конца последнего по координатам интервала
- энумератор, который позволяет перебирать все интервалы в цикле foreach
- Save(string filename), Load(string filename) -  сохрание, загр в файл


Задача 2. (5 баллов)

Программа по таймеру, 1 раз в секунду, просматривает содержимое определённой папки,
yаходит все новые текстовые файлы, делит их на слова и пополняет свой частотный 
словарь слов (подсчёт количеств каждого слова в текстах) без учёта регистра букв, 
который сразу сохраняется в результирующий файл. Важно, чтобы текстовые файлы 
участвовали в пополнении частотного словаря только один раз, вне зависимости от 
изменений. Также программа пишет в файл .log пути ко всем обработанным файлам и время, когда произошла обработка.

Для решения задачи организовать сервер, который 1 раз в секунду всем подписчикам 
присылает список файлов для обработки. Сам сервер обеспечивает неповторяемость файлов с списке.
Должно быть 2 клиента: один формирует частотный словарь и сохраняет (или обновляет) его в файл, второй пишет в файл .log

Требования: использовать делегаты и events или интерфейсы
Пример частотного словаря:
я: 213
и: 890
бежать: 22
говорить: 27
