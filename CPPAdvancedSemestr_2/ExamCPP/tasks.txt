Экзаменационное задание по C++

Задача 1 (7 баллов)
Разработать класс Word, который хранит одно слово, содержащий следующие члены класса:
конструктор по умолчанию
конструктор, принимающий строку (char* или string) и заносящий её в класс (если передаётся несколько слов в строке, хранится только первое слово)
конструктор копирования
operator =
деструктор
print - печатает слово на экран
length - возвращает количество символов в слове
set(char* или string) - заносит новое слово в класс (меняет старое слово на новое)
char* get() - возвращает слово
operator[] (int pos) - получает доступ к символу в слове для чтения и записи

Задача 2 (3 балла)
Разработать класс Sentence, позволяющий хранить одно предложение, состоящее из слов, класс имеет следующие члены:
коллекция слов типа Word
конструктор по умолчанию
конструктор, принимающий строку (char* или string) и заносящий её в класс (строка предварительно делится на слова, разделители - пробелы и табуляции, подряд могут идти несколько разделителей)
конструктор копирования
operator =
деструктор
print - печатает предложение на экран
length - возвращает количество слов в предложении
set(char* или string) - заносит новое предложение в класс
char* get() - возвращает всю строку с предложением
void Add(Word word) – добавляет новое слово в предложение
bool Remove(unsigned index) – удаляет слово из предложения
operator += (Word word) – добавляет новое слово в предложение
operator[] (int& pos) - получает доступ к слову в предложении для чтения и записи

Задача 3 (2 балла)
Разработать класс Text, позволяющий хранить текст, состоящий из предложений, класс имеет следующие члены:
коллекция предложений типа Sentence
конструктор по умолчанию
конструктор, принимающий строку (char* или string) и заносящий её в класс (строка предварительно делится на предложения, разделители - [.!?])
конструктор копирования
operator =
деструктор
operator << печатает текст на экран, каждое предложение на новой строке
length - возвращает количество предложений в тексте
set(char* или string) - заносит новый текст в класс, который сначала разделяется на предложения, разделители - [.!?])
char* get() - возвращает строку с текстом, полученным при соединении всех предложений (соединитель - . (точка))
void Add(Sentense word) – добавляет новое предложение в текст
bool Remove(unsigned index) – удаляет предложение из текста
operator += (Sentense word) – добавляет новое предложение в текст
operator[] (int& pos) - получает доступ к предложению в тексте для чтения и записи
load(char* filename) - загрузка текста из файла и разбиение на предложения, разделители - [.!?])
save(char* filename) - сохранение текста в файл, каждое предложение на отдельной строке, соединитель - . (точка)
saveWords(char* filename) - сохранение списка всех слов текста без повторений в столбик


Требования к работе:
в качестве коллекций использовать классы STL, хотя бы где-то
для работы с файлами использовать средства C++
для хранения строк использовать STL класс String или динамические строки языка C
НЕ использовать меню или какие-либо украшательства в коде, функция main() должна демонстрировать работу всех методов всех классов
 
